<?php

class fileReplace {
    function doAction(string $oudeBestand, string $oudeString, string $nieuweString, string $nieuweBestand){
        $oudebestand_tekst    = file_get_contents(__DIR__ . '/' . $oudeBestand);
        $nieuwebestand_tekst  = __DIR__ . '/' . $nieuweBestand;
        $replaceString        = str_replace($oudeString, $nieuweString, $oudebestand_tekst);
        file_put_contents($nieuwebestand_tekst, $replaceString);
        echo $replaceString; die();
        return $replaceString;
    }
}



<?php

require_once (__DIR__. '/../fileReplace.php');

class testFileReplace extends \PHPUnit\Framework\TestCase {

    /**
      * @dataProvider dataProvider
      */
    function test ($parms) {
         $fileReplace = new fileReplace();
         $return  = $fileReplace->doAction($parms['oudeBestand'], $parms['oudeString'],$parms['nieuweString'],$parms['nieuweBestand']);
        // echo $return ; die();
         $this->assertTrue(strpos($return, $parms['oudeString'])  == false);
         $this->assertFalse(strpos($return, $parms['oudeString']) == true);
    }

    function dataProvider() {
         $parms = [] ;
         $parms['oudeBestand']  = 'bestandLezen.txt';
         $parms['oudeString']   = 'examen';
         $parms['nieuweString'] = 'SoumaiaMamo';
         $parms['nieuweBestand']= 'fileReplace.txt' ;

         return [
             [$parms]
         ];
    }
}